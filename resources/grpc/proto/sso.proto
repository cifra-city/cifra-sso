syntax = 'proto3';

package auth;

option go_package = "github.com/cifra-city/cifra-sso;ssov1";

// Auth service for authentication and authorization users
service Auth {
  rpc Register(RegisterRequest) returns (RegisterResponse);
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc Logout(LogoutRequest) returns (LogoutResponse);
  rpc IsAdmin(IsAdminRequest) returns (IsAdminResponse);
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
}

// Request for register new user, email and username must be unique, password must be at least 8 characters and contain at least one uppercase letter, one lowercase letter, one number and one special character
message RegisterRequest {
   string email = 1; // at next version, this will be optional
   string username = 2;
   string password = 3; // Test$7777 for example
}

// Response for register new user, user_id is the id of the new user
message RegisterResponse {
  string user_id = 1;
}

// Request for login, email or username can be used to login
message LoginRequest {
   string email = 1; // at next version, this will be optional
   string username = 2;
   string password = 3;
   int32 app_id = 4;
}

// Response for login, token is the JWT token for the user
message LoginResponse {
  string token = 1;
}

// Request for checking if user is admin
message IsAdminRequest {
   string token = 1;
}

// Response for checking if user is admin, is_admin is true if user is admin
message IsAdminResponse {
  bool is_admin = 1;
}

message LogoutRequest {}

message LogoutResponse {
  string message = 1;
}

message GetUserRequest {}

message GetUserResponse {
  string user_id = 1;
  string username = 2;
  string email = 3;
}